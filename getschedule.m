function [sids,t] = getschedule(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [DT,SATNAME,CHN,AOS,LOS] = IMPORTFILE(FILENAME) Reads data from text
%   file FILENAME for the default selection.
%
%   [DT,SATNAME,CHN,AOS,LOS] = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads
%   data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   [dt,satname,chn,aos,los] = importfile('meogen.sch',3, 332);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2023/11/22 10:20:11

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 3;
    endRow = inf;
end

%% Format for each line of text:
%   column1: text (%s)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%*s%*s%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
dt = dataArray{:, 1};
satname = dataArray{:, 2};
chn = str2double(extractAfter(dataArray{:, 3},1));
aos = dataArray{:, 4};
los = dataArray{:, 5};
t= datetime(dt(1),'InputFormat','yyyy-MM-dd')+(300:50:86400-9350)/86400;
sids=zeros(length(t),7);
load('prns.mat','prns')
for i=1:7
    sel=chn==i;
    AOS=datetime(strcat(dt(sel),aos(sel)),'InputFormat','yyyy-MM-dd HH:mm:ss');
    LOS=datetime(strcat(dt(sel),los(sel)),'InputFormat','yyyy-MM-dd HH:mm:ss');
    sname = satname(sel);
    m=1;
    
    for j=1:length(t)
        %select segment
        if isbetween(t(j),AOS(m),LOS(m))
            sids(j,i)=getSID(char(sname(m)),prns);
        else
            if m < length(AOS)
                if t(j) > AOS(m+1)
                    m=m+1;
                end
            end
        end
    end
end
end

function SID=getSID(snm,prnlist)
found = true;
if snm(1)=='G'
    idx=str2double(extractAfter(snm,5));
elseif snm(1)=='C'
    idx=str2double(extractAfter(snm,9));
else
    found=false;
end
 if found
    SID=prnlist(idx);
 else
    SID=0;
 end
end

